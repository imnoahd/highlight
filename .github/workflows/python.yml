name: Python SDK

on:
    push:
        branches: ['main']
    pull_request:
        types: [opened, synchronize]
        paths:
            - 'sdk/highlight-py/**'
            - '.github/workflows/python.yml'
    merge_group:

jobs:
    build:
        name: Python SDK
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./sdk/highlight-py
        steps:
            - uses: actions/checkout@v3
            - name: Install poetry
              run: pipx install poetry
            - uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
                  cache: 'poetry'
            - run: poetry install --all-extras
            - name: Lint
              run: poetry run black --check .
            - name: Test
              run: poetry run pytest --cov=highlight_io --cov-branch --cov-report xml
            - name: Code Coverage Report
              uses: irongut/CodeCoverageSummary@v1.3.0
              with:
                  filename: ./sdk/highlight-py/coverage.xml
                  badge: true
                  fail_below_min: true
                  format: markdown
                  output: both
                  thresholds: '50 80'
            - name: Add Coverage PR Comment
              uses: marocchino/sticky-pull-request-comment@v2
              if: github.event_name == 'pull_request'
              with:
                  recreate: true
                  path: code-coverage-results.md
            - name: Build
              run: poetry build
            - name: Validate PyProject
              working-directory: ./e2e/python
              run: |
                  python -m pip install -U pip-tools;
                  python -m piptools compile --upgrade pyproject.toml;
            - name: Publish
              if: github.ref == 'refs/heads/main'
              run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD --skip-existing
              env:
                  PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
                  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
